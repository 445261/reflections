How did viewing a diff between two versions of a file help you see the bug that was introduced?

diff -u file.old file.new
diff shows the changes made between the two files + for what's added, - for what's removed.  


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

if there is a bug you can compare to old file, you can see previous versions and see how it changed, you can bring back old code if it's relevent


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

pro - logical reason for a version change, con - computer might crash/you forget to save changes


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

because Git is specifically a version control for programs that may have multiple files affected by a single commit


How can you use the commands git log and git diff to view the history of files?

git log to list all of the commits in a repository, git diff to see what was added and removed between two versions, remember older is lower on list


How might using version control make you more confident to make changes that
could break something?

You don't have to worry about breaking stuff, you can always just roll back to last stable version


Now that you have your workspace set up, what do you want to try using Git for?

making programs with version control and practicing writing code
